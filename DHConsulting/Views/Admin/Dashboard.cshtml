@model IEnumerable<DHConsulting.Models.Ordine>

@{
    ViewBag.Title = "Dashboard";
    var basic = ViewBag.Basic as List<DHConsulting.Models.Dettaglio>;
    var plus = ViewBag.Plus as List<DHConsulting.Models.Dettaglio>;
    var pro = ViewBag.Pro as List<DHConsulting.Models.Dettaglio>;
    var totaleBasic = basic.Sum(dettaglio => dettaglio.Quantita);
    decimal totaleFullBasic = basic.Sum(dettaglio => dettaglio.Quantita * dettaglio.Prodotto.Costo);
    var totalePlus = plus.Sum(dettaglio => dettaglio.Quantita);
    decimal totaleFullPlus = plus.Sum(dettaglio => dettaglio.Quantita * dettaglio.Prodotto.Costo);
    var totalePro = pro.Sum(dettaglio => dettaglio.Quantita);
    decimal totaleFullPro = pro.Sum(dettaglio => dettaglio.Quantita * dettaglio.Prodotto.Costo);
    decimal somma = totaleFullBasic + totaleFullPlus + totaleFullPro;
    decimal media = Model.Count() > 0 ? somma / Model.Count() : 0;
}

<section class="flex flex-col lg:flex-row justify-evenly antialiased">
    <div class="max-w-3xl p-4 sm:px-6">
        <!-- Chart widget -->
        <div class="flex flex-col col-span-full xl:col-span-8 shadow-lg rounded-md border border-gray-200 bg-base-100">
            <header class="px-5 py-4 border-b border-gray-200 flex items-center">
                <h2 class="font-semibold">Dashboard</h2>
            </header>
            <div class="p-5">
                <div class="flex w-full">
                    <!-- Unique Visitors -->
                    <div class="w-1/3 flex items-center justify-center border-e-2">
                        <div class="flex flex-col items-center justify-center">
                            <div>
                                <div class="text-lg lg:text-3xl font-bold">@somma.ToString("C")</div>
                            </div>
                            <div class="text-sm">Totale</div>
                        </div>
                    </div>
                    <!-- Total Pageviews -->
                    <div class="w-1/3 flex items-center justify-center border-e-2">
                        <div class="flex flex-col items-center justify-center">
                            <div>
                                <div class="text-lg lg:text-3xl font-bold">@DateTime.Now.Year</div>
                            </div>
                            <div class="text-sm">Anno</div>
                        </div>
                    </div>
                    <!-- Bounce Rate -->
                    <div class="w-1/3 items-center justify-center flex">
                        <div class="flex flex-col items-center justify-center">
                            <div>
                                <div class="text-lg lg:text-3xl font-bold">@media.ToString("C")</div>
                            </div>
                            <div class="text-sm">Valore Medio</div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Chart built with Chart.js 3 -->
            <div class="flex-grow px-2">
                <canvas id="analytics-card-01" width="800" height="300"></canvas>
            </div>
        </div>
    </div>
    <div class="p-4 sm:px-6">
        <div>
            <div class="flex items-center border rounded-md px-4 py-5 shadow-md mb-11 bg-base-100">
                <img src="https://cdn.pixabay.com/photo/2018/08/18/13/26/interface-3614766_1280.png" alt="info" class="h-20 w-20 rounded-full me-3" />
                <div>
                    <h3 class="font-bold text-lg">Pacchetto basic</h3>
                    <p>Venduti: @totaleBasic</p>
                    <p>Totale: @totaleFullBasic.ToString("C")</p>
                </div>
            </div>
            <div class="flex items-center border rounded-md px-4 py-5 shadow-md mb-11 bg-base-100">
                <img src="https://cdn.pixabay.com/photo/2018/08/18/13/26/interface-3614766_1280.png" alt="info" class="h-20 w-20 rounded-full me-3" />
                <div>
                    <h3 class="font-bold text-lg">Pacchetto plus</h3>
                    <p>Venduti: @totalePlus</p>
                    <p>Totale: @totaleFullPlus.ToString("C")</p>
                </div>
            </div>
            <div class="flex items-center border rounded-md px-4 py-5 shadow-md bg-base-100">
                <img src="https://cdn.pixabay.com/photo/2018/08/18/13/26/interface-3614766_1280.png" alt="info" class="h-20 w-20 rounded-full me-3" />
                <div>
                    <h3 class="font-bold text-lg">Pacchetto pro</h3>
                    <p>Venduti: @totalePro</p>
                    <p>Totale: @totaleFullPro.ToString("C")</p>
                </div>
            </div>
        </div>
    </div>
</section>
<section class="py-12 px-4 sm:px-6">
    <div class="w-full max-w-6xl mx-auto shadow-lg rounded-md border border-gray-200 mb-5 bg-base-100">
        <header class="px-5 py-4 border-b border-gray-200">
            <h2 class="font-semibold">Riepilogo ordini totali</h2>
        </header>
        <div class="p-3">
            <div class="overflow-x-auto">
                <table class="table-auto w-full">
                    <thead class="text-xs font-semibold uppercase">
                        <tr>
                            <th class="p-2 whitespace-nowrap hidden lg:block">
                                <div class="font-semibold text-left"></div>
                            </th>
                            <th class="p-2 whitespace-nowrap">
                                <div class="font-semibold text-left">Id ordine</div>
                            </th>
                            <th class="p-2 whitespace-nowrap">
                                <div class="font-semibold text-left">Cliente</div>
                            </th>
                            <th class="p-2 whitespace-nowrap">
                                <div class="font-semibold text-left">Data ordine</div>
                            </th>
                            <th class="p-2 whitespace-nowrap">
                                <div class="font-semibold text-left">Totale</div>
                            </th>
                        </tr>
                    </thead>
                    <tbody class="text-xs lg:text-sm divide-y divide-gray-100">
                        @if (Model.Any() && Model != null)
                        {
                            foreach (var item in Model)
                            {
                                <tr>
                                    <td class="p-2 whitespace-nowrap hidden lg:block">
                                        <div><i class="fa-solid fa-clipboard-list text-2xl"></i></div>
                                    </td>
                                    <td class="p-2 whitespace-nowrap">
                                        <div class="font-medium">@item.IdOrdine</div>
                                    </td>
                                    <td class="p-2 whitespace-nowrap">
                                        <div class="text-left">@item.Cliente.Nome @item.Cliente.Cognome</div>
                                    </td>
                                    <td class="p-2 whitespace-nowrap">
                                        <div class="text-left">@string.Format("{0:d}", item.DataOrdine)</div>
                                    </td>
                                    @{
                                        decimal tot = 0;
                                        foreach (var prod in item.Dettaglio)
                                        {
                                            tot += prod.Quantita * prod.Prodotto.Costo;
                                        }
                                    }
                                    <td class="p-2 whitespace-nowrap">
                                        <div class="text-left font-medium text-green-500">@tot.ToString("C")</div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td class="text-center italic uppercase py-2" colspan="5">non ci sono ordini</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="w-full max-w-6xl mx-auto shadow-lg rounded-md border border-gray-200 mb-5 collapse collapse-arrow bg-base-100">
        <input type="radio" name="accordion" />
        <header class="px-5 py-4 border-b border-gray-200 collapse-title">
            <h2 class="font-semibold">Riepilogo ordini basic</h2>
        </header>
        <div class="p-3 collapse-content">
            <div class="overflow-x-auto">
                <table class="table-auto w-full">
                    <thead class="text-xs font-semibold uppercase">
                        <tr>
                            <th class="p-2 whitespace-nowrap hidden lg:block">
                                <div class="font-semibold text-left"></div>
                            </th>
                            <th class="p-2 whitespace-nowrap">
                                <div class="font-semibold text-left">Id ordine</div>
                            </th>
                            <th class="p-2 whitespace-nowrap">
                                <div class="font-semibold text-left">Cliente</div>
                            </th>
                            <th class="p-2 whitespace-nowrap">
                                <div class="font-semibold text-left">Data ordine</div>
                            </th>
                            <th class="p-2 whitespace-nowrap">
                                <div class="font-semibold text-left">Totale</div>
                            </th>
                        </tr>
                    </thead>
                    <tbody class="text-xs lg:text-sm divide-y divide-gray-100">
                        @if (basic.Count() > 0 && basic != null)
                        {
                            foreach (var item in basic)
                            {
                                foreach (var i in Model)
                                {
                                    if (item.IdOrdine == i.IdOrdine)
                                    {
                                        <tr>
                                            <td class="p-2 whitespace-nowrap hidden lg:block">
                                                <div><i class="fa-solid fa-clipboard-list text-2xl"></i></div>
                                            </td>
                                            <td class="p-2 whitespace-nowrap">
                                                <div class="font-medium">@item.IdOrdine</div>
                                            </td>
                                            <td class="p-2 whitespace-nowrap">
                                                <div class="text-left">@i.Cliente.Nome @i.Cliente.Cognome</div>
                                            </td>
                                            <td class="p-2 whitespace-nowrap">
                                                <div class="text-left">@string.Format("{0:d}", i.DataOrdine)</div>
                                            </td>
                                            @{
                                                decimal tot = 0;
                                                foreach (var prod in i.Dettaglio)
                                                {
                                                    tot += prod.Quantita * prod.Prodotto.Costo;
                                                }
                                            }
                                            <td class="p-2 whitespace-nowrap">
                                                <div class="text-left font-medium text-green-500">@tot.ToString("C")</div>
                                            </td>
                                        </tr>
                                    }
                                }
                            }
                        }
                        else
                        {
                            <tr>
                                <td class="text-center italic uppercase py-2" colspan="5">non ci sono ordini</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="w-full max-w-6xl mx-auto shadow-lg rounded-md border border-gray-200 mb-5 collapse collapse-arrow bg-base-100">
        <input type="radio" name="accordion" />
        <header class="px-5 py-4 border-b border-gray-200 collapse-title">
            <h2 class="font-semibold">Riepilogo ordini plus</h2>
        </header>
        <div class="p-3 collapse-content">
            <div class="overflow-x-auto">
                <table class="table-auto w-full">
                    <thead class="text-xs font-semibold uppercase">
                        <tr>
                            <th class="p-2 whitespace-nowrap hidden lg:block">
                                <div class="font-semibold text-left"></div>
                            </th>
                            <th class="p-2 whitespace-nowrap">
                                <div class="font-semibold text-left">Id ordine</div>
                            </th>
                            <th class="p-2 whitespace-nowrap">
                                <div class="font-semibold text-left">Cliente</div>
                            </th>
                            <th class="p-2 whitespace-nowrap">
                                <div class="font-semibold text-left">Data ordine</div>
                            </th>
                            <th class="p-2 whitespace-nowrap">
                                <div class="font-semibold text-left">Totale</div>
                            </th>
                        </tr>
                    </thead>
                    <tbody class="text-xs lg:text-sm divide-y divide-gray-100">
                        @if (plus.Count() > 0 && plus != null)
                        {
                            foreach (var item in plus)
                            {
                                foreach (var i in Model)
                                {
                                    if (item.IdOrdine == i.IdOrdine)
                                    {
                                        <tr>
                                            <td class="p-2 whitespace-nowrap hidden lg:block">
                                                <div><i class="fa-solid fa-clipboard-list text-2xl"></i></div>
                                            </td>
                                            <td class="p-2 whitespace-nowrap">
                                                <div class="font-medium">@item.IdOrdine</div>
                                            </td>
                                            <td class="p-2 whitespace-nowrap">
                                                <div class="text-left">@i.Cliente.Nome @i.Cliente.Cognome</div>
                                            </td>
                                            <td class="p-2 whitespace-nowrap">
                                                <div class="text-left">@string.Format("{0:d}", i.DataOrdine)</div>
                                            </td>
                                            @{
                                                decimal tot = 0;
                                                foreach (var prod in i.Dettaglio)
                                                {
                                                    tot += prod.Quantita * prod.Prodotto.Costo;
                                                }
                                            }
                                            <td class="p-2 whitespace-nowrap">
                                                <div class="text-left font-medium text-green-500">@tot.ToString("C")</div>
                                            </td>
                                        </tr>
                                    }
                                }
                            }
                        }
                        else
                        {
                            <tr>
                                <td class="text-center italic uppercase py-2" colspan="5">non ci sono ordini</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="w-full max-w-6xl mx-auto shadow-lg rounded-md border border-gray-200 collapse collapse-arrow bg-base-100">
        <input type="radio" name="accordion" />
        <header class="px-5 py-4 border-b border-gray-200 collapse-title">
            <h2 class="font-semibold">Riepilogo ordini pro</h2>
        </header>
        <div class="p-3 collapse-content">
            <div class="overflow-x-auto">
                <table class="table-auto w-full">
                    <thead class="text-xs font-semibold uppercase">
                        <tr>
                            <th class="p-2 whitespace-nowrap hidden lg:block">
                                <div class="font-semibold text-left"></div>
                            </th>
                            <th class="p-2 whitespace-nowrap">
                                <div class="font-semibold text-left">Id ordine</div>
                            </th>
                            <th class="p-2 whitespace-nowrap">
                                <div class="font-semibold text-left">Cliente</div>
                            </th>
                            <th class="p-2 whitespace-nowrap">
                                <div class="font-semibold text-left">Data ordine</div>
                            </th>
                            <th class="p-2 whitespace-nowrap">
                                <div class="font-semibold text-left">Totale</div>
                            </th>
                        </tr>
                    </thead>
                    <tbody class="text-xs lg:text-sm divide-y divide-gray-100">
                        @if (pro.Count() > 0 && pro != null)
                        {
                            foreach (var item in pro)
                            {
                                foreach (var i in Model)
                                {
                                    if (item.IdOrdine == i.IdOrdine)
                                    {
                                        <tr>
                                            <td class="p-2 whitespace-nowrap hidden lg:block">
                                                <div><i class="fa-solid fa-clipboard-list text-2xl"></i></div>
                                            </td>
                                            <td class="p-2 whitespace-nowrap">
                                                <div class="font-medium">@item.IdOrdine</div>
                                            </td>
                                            <td class="p-2 whitespace-nowrap">
                                                <div class="text-left">@i.Cliente.Nome @i.Cliente.Cognome</div>
                                            </td>
                                            <td class="p-2 whitespace-nowrap">
                                                <div class="text-left">@string.Format("{0:d}", i.DataOrdine)</div>
                                            </td>
                                            @{
                                                decimal tot = 0;
                                                foreach (var prod in i.Dettaglio)
                                                {
                                                    tot += prod.Quantita * prod.Prodotto.Costo;
                                                }
                                            }
                                            <td class="p-2 whitespace-nowrap">
                                                <div class="text-left font-medium text-green-500">@tot.ToString("C")</div>
                                            </td>
                                        </tr>
                                    }
                                }
                            }
                        }
                        else
                        {
                            <tr>
                                <td class="text-center italic uppercase py-2" colspan="5">non ci sono ordini</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</section>


@section scripts{
    <script>
        window.console = window.console || function (t) { };
    </script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.6.0/chart.min.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/chartjs-adapter-moment/1.0.0/chartjs-adapter-moment.min.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/locale/it.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/alpinejs/3.5.2/cdn.js'></script>
    <script id="rendered-js">
        const ctx = document.getElementById('analytics-card-01');
        const chartData = @Html.Raw(Json.Encode(Model.Select(item => new { DataOrdine = item.DataOrdine, Totale = item.Dettaglio.Sum(prod => prod.Quantita * prod.Prodotto.Costo) })));

        // Prendo le etichette e i dati dalla risposta del server
        var allDates = [];
        var values = [];

        // Costruisco un set di tutte le date presenti nei dati del grafico
        chartData.forEach(item => {
            var formattedDate = moment(item.DataOrdine).format('MMM YYYY');
            if (!allDates.includes(formattedDate)) {
                allDates.push(formattedDate);
            }
        });

        // Aggiungo tutti i mesi dell'anno se non presenti
        for (let i = 0; i < 12; i++) {
            var month = moment().month(i).format('MMM');
            var year = moment().year();
            var formattedDate = `${month} ${year}`;

            if (!allDates.includes(formattedDate)) {
                allDates.push(formattedDate);
            }
        }

        // Ordino le date per garantire l'ordine corretto
        allDates.sort((a, b) => moment(a, 'MMM YYYY') - moment(b, 'MMM YYYY'));

        // Popolo l'array dei valori con i dati corrispondenti alle etichette
        allDates.forEach(date => {
            var dataItem = chartData.find(item => moment(item.DataOrdine).format('MMM YYYY') === date);
            if (dataItem) {
                values.push(dataItem.Totale);
            } else {
                values.push(0);
            }
        });

        // Grafico Chart.js 3
        const chart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: allDates,
                datasets: [
                    {
                        label: 'Totale Ordini',
                        data: values,
                        fill: true,
                        backgroundColor: 'rgba(59, 130, 246, 0.08)',
                        borderColor: 'rgb(99, 102, 241)',
                        borderWidth: 2,
                        tension: 0,
                        pointRadius: 0,
                        pointHoverRadius: 3,
                        pointBackgroundColor: 'rgb(99, 102, 241)',
                    }
                ]
            },
            options: {
                layout: {
                    padding: 20
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            drawBorder: false,
                            color: 'rgba(179, 180, 180, 0.3)'
                        },
                        ticks: {
                            callback: value => Intl.NumberFormat('eu-IT', {
                                maximumSignificantDigits: 3,
                                notation: 'compact'
                            }).format(value),
                            color: 'darkgrey'
                        }
                    },
                    x: {
                        type: 'time',
                        time: {
                            parser: 'MMM YYYY',
                            unit: 'month',
                            displayFormats: {
                                'month': 'MMM YYYY'
                            }
                        },
                        grid: {
                            display: false,
                            drawBorder: false
                        },
                        ticks: {
                            autoSkipPadding: 48,
                            maxRotation: 0,
                            color: 'darkgrey'
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        callbacks: {
                            title: () => false,
                            label: context => Intl.NumberFormat('eu-IT', {
                                maximumSignificantDigits: 3,
                                notation: 'compact'
                            }).format(context.parsed.y)
                        }
                    }
                },
                interaction: {
                    intersect: false,
                    mode: 'nearest'
                },
                maintainAspectRatio: false
            }
        });
    </script>
}

