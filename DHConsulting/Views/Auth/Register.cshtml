@model DHConsulting.Models.Cliente

@{
    ViewBag.Title = "Registrati";
}

@section style{
    <style>
        .register-hero {
            background: linear-gradient(135deg, #0a0a0a 0%, #1f1f1f 50%, #2a2a2a 100%);
            position: relative;
            overflow: hidden;
        }

        .floating-particles {
            position: absolute;
            width: 100%;
            height: 100%;
            overflow: hidden;
        }

        .particle {
            position: absolute;
            background: rgba(251, 191, 36, 0.08);
            border-radius: 50%;
            animation: float 8s ease-in-out infinite;
        }

            .particle:nth-child(1) {
                width: 400px;
                height: 400px;
                top: 5%;
                left: 5%;
                animation-delay: 0s;
            }

            .particle:nth-child(2) {
                width: 250px;
                height: 250px;
                top: 50%;
                right: 5%;
                animation-delay: -3s;
            }

            .particle:nth-child(3) {
                width: 180px;
                height: 180px;
                bottom: 10%;
                left: 40%;
                animation-delay: -6s;
            }

        @@keyframes float {
            0%, 100% {
                transform: translateY(0px) rotate(0deg);
            }

            33% {
                transform: translateY(-30px) rotate(3deg);
            }

            66% {
                transform: translateY(15px) rotate(-2deg);
            }
        }

        .glass-card {
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

        .input-group {
            position: relative;
            margin-bottom: 1.5rem;
        }

        .floating-label {
            position: absolute;
            left: 1rem;
            top: 1rem;
            color: #6b7280;
            transition: all 0.3s ease;
            pointer-events: none;
            background: white;
            padding: 0 0.5rem;
            font-size: 0.9rem;
        }

        .form-input:focus + .floating-label,
        .form-input:not(:placeholder-shown) + .floating-label {
            transform: translateY(-1.75rem) scale(0.85);
            color: #fbbf24;
            font-weight: 500;
        }

        .form-input {
            width: 100%;
            padding: 1rem;
            border: 2px solid #e5e7eb;
            border-radius: 1rem;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.95);
            font-size: 1rem;
        }

            .form-input:focus {
                outline: none;
                border-color: #fbbf24;
                box-shadow: 0 0 0 3px rgba(251, 191, 36, 0.1);
                transform: translateY(-1px);
            }

            .form-input.error {
                border-color: #ef4444;
                box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
            }

        .social-login {
            background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
            border: 2px solid #e5e7eb;
            transition: all 0.3s ease;
        }

            .social-login:hover {
                border-color: #fbbf24;
                transform: translateY(-2px);
                box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            }

        .btn-primary-custom {
            background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%);
            border: none;
            color: #000;
            font-weight: 600;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

            .btn-primary-custom:hover {
                background: linear-gradient(135deg, #fcd34d 0%, #fbbf24 100%);
                transform: translateY(-2px);
                box-shadow: 0 10px 25px rgba(251, 191, 36, 0.4);
            }

            .btn-primary-custom:disabled {
                opacity: 0.6;
                cursor: not-allowed;
                transform: none;
            }

        .password-toggle {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: #6b7280;
            transition: color 0.3s ease;
            z-index: 10;
        }

            .password-toggle:hover {
                color: #fbbf24;
            }

        .alert-custom {
            background: linear-gradient(135deg, #fef2f2 0%, #fef7f7 100%);
            border: 1px solid #fca5a5;
            border-radius: 1rem;
            animation: slideIn 0.3s ease-out;
        }

        @@keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .brand-section {
            color: white;
        }

        .feature-item {
            display: flex;
            align-items: center;
        }

        .feature-icon {
            width: 3rem;
            height: 3rem;
            background: rgba(251, 191, 36, 0.2);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
            border: 2px solid rgba(251, 191, 36, 0.3);
            flex-shrink: 0;
        }

        .captcha-container {
            background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
            border: 2px solid #e2e8f0;
            border-radius: 1rem;
            padding: 1rem;
            margin: 1.5rem 0;
            position: relative;
            overflow: hidden;
        }

            .captcha-container::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 4px;
                background: linear-gradient(90deg, #fbbf24, #f59e0b, #fbbf24);
                background-size: 200% 100%;
                animation: gradientShift 3s ease-in-out infinite;
            }

        @@keyframes gradientShift {
            0%, 100% {
                background-position: 0% 50%;
            }

            50% {
                background-position: 100% 50%;
            }
        }

        .form-grid {
            display: grid;
            gap: 1.5rem;
        }

        @@media (min-width: 768px) {
            .form-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        .progress-bar {
            height: 4px;
            background: #e5e7eb;
            border-radius: 2px;
            overflow: hidden;
            margin-bottom: 2rem;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #fbbf24, #f59e0b);
            border-radius: 2px;
            transition: width 0.3s ease;
            width: 0%;
        }

        .step-indicator {
            display: flex;
            justify-content: center;
            margin-bottom: 2rem;
        }

        .step {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background: #e5e7eb;
            margin: 0 4px;
            transition: all 0.3s ease;
        }

            .step.active {
                background: #fbbf24;
                transform: scale(1.2);
            }

        @@media (max-width: 1024px) {
            .register-hero {
                min-height: auto;
            }

            .glass-card {
                margin: 1rem;
            }
        }
    </style>
}

<main class="register-hero min-h-screen">
    <!-- Floating Particles -->
    <div class="floating-particles">
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
    </div>

    <div class="relative min-h-screen flex items-center justify-center p-4 py-8">
        <div class="w-full max-w-7xl mx-auto grid lg:grid-cols-5 gap-8 items-start">

            <!-- Left Side - Branding (30%) -->
            <div class="brand-section hidden lg:block lg:col-span-2" data-aos="fade-right" data-aos-duration="1000">
                <div class="max-w-lg sticky top-8">
                    <!-- Logo -->
                    <div class="mb-8">
                        <img src="~/Content/Img/logo_orizz_sf.png" alt="Five Innovation Hub" class="w-72 mb-6">
                    </div>

                    <h1 class="text-4xl font-bold mb-6 leading-tight">
                        Inizia il tuo viaggio
                        <span class="bg-gradient-to-r from-yellow-400 to-yellow-600 bg-clip-text text-transparent font-caveat text-5xl block">
                            nell'innovazione
                        </span>
                    </h1>

                    <p class="text-lg text-gray-300 mb-8 leading-relaxed">
                        Unisciti alla comunità di innovatori digitali. Crea il tuo account e scopri
                        come trasformare le tue idee in realtà.
                    </p>

                    <!-- Features -->
                    <div class="space-y-4">
                        <div class="feature-item">
                            <div class="feature-icon">
                                <i class="fa-solid fa-user-check text-yellow-400"></i>
                            </div>
                            <div>
                                <h3 class="font-semibold">Account Verificato</h3>
                                <p class="text-gray-400 text-sm">Processo di verifica sicuro e veloce</p>
                            </div>
                        </div>

                        <div class="feature-item">
                            <div class="feature-icon">
                                <i class="fa-solid fa-gift text-yellow-400"></i>
                            </div>
                            <div>
                                <h3 class="font-semibold">Benvenuto Speciale</h3>
                                <p class="text-gray-400 text-sm">Offerte esclusive per i nuovi utenti</p>
                            </div>
                        </div>

                        <div class="feature-item">
                            <div class="feature-icon">
                                <i class="fa-solid fa-headset text-yellow-400"></i>
                            </div>
                            <div>
                                <h3 class="font-semibold">Supporto Dedicato</h3>
                                <p class="text-gray-400 text-sm">Team sempre disponibile per aiutarti</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Right Side - Registration Form (70%) -->
            <div class="w-full lg:col-span-3" data-aos="fade-left" data-aos-duration="1000" data-aos-delay="200">
                <div class="glass-card bg-white rounded-3xl shadow-2xl p-6 lg:p-8">

                    <!-- Mobile Logo -->
                    <div class="lg:hidden text-center mb-6">
                        <img src="~/Content/Img/logo_orizz_sf.png" alt="Five Innovation Hub" class="w-48 mx-auto mb-4">
                        <h2 class="text-2xl font-bold text-gray-800">Crea il tuo account</h2>
                    </div>

                    <!-- Desktop Header -->
                    <div class="hidden lg:block text-center mb-8">
                        <div class="w-16 h-16 bg-gradient-to-r from-yellow-400 to-yellow-600 rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg">
                            <i class="fa-solid fa-user-plus text-2xl text-white"></i>
                        </div>
                        <h2 class="text-3xl font-bold text-gray-800 mb-2">Crea il tuo account</h2>
                        <p class="text-gray-600">Compila il form per iniziare il tuo viaggio digitale</p>
                    </div>

                    <!-- Progress Indicator -->
                    <div class="progress-bar">
                        <div class="progress-fill" id="progressFill"></div>
                    </div>

                    <!-- Error Messages -->
                    @if (ViewBag.User != null || TempData["Token"] != null)
                    {
                        <div class="alert-custom p-4 mb-6">
                            <div class="flex items-center">
                                <div class="flex items-center justify-center w-10 h-10 bg-red-100 rounded-full mr-3">
                                    <i class="fa-solid fa-exclamation-triangle text-red-600"></i>
                                </div>
                                <div>
                                    <h4 class="font-semibold text-red-800">Attenzione</h4>
                                    <p class="text-red-700 text-sm">@(ViewBag.User ?? TempData["Token"])</p>
                                </div>
                            </div>
                        </div>
                    }

                    <!-- Registration Form -->
                    @using (Html.BeginForm("Register", "Auth", FormMethod.Post, new { @class = "space-y-4", @id = "registrationForm" }))
                    {
                        @Html.AntiForgeryToken()

                        <!-- Required Fields Notice -->
                        <div class="bg-blue-50 border border-blue-200 rounded-xl p-4 mb-8" style="margin-bottom: 2em;">
                            <div class="flex items-center">
                                <i class="fa-solid fa-info-circle text-blue-600 mr-2"></i>
                                <span class="text-blue-800 text-sm font-medium">Tutti i campi sono obbligatori</span>
                            </div>
                        </div>

                        <!-- Name and Surname -->
                        <div class="form-grid">
                            <div>
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.Nome, new
                                    {
                                        @class = "form-input text-gray-900",
                                        @placeholder = " ",
                                        @autocomplete = "given-name"
                                    })
                                    <label class="floating-label dark:bg-[#f3f2f2e6]" style="border-radius: 0.5rem !important;">
                                        <i class="fa-solid fa-user mr-2"></i>Nome
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-red-500 text-sm mt-1 block" })
                            </div>

                            <div>
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.Cognome, new
                                    {
                                        @class = "form-input text-gray-900",
                                        @placeholder = " ",
                                        @autocomplete = "family-name"
                                    })
                                    <label class="floating-label dark:bg-[#f3f2f2e6]" style="border-radius: 0.5rem !important;">
                                        <i class="fa-solid fa-user mr-2"></i>Cognome
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.Cognome, "", new { @class = "text-red-500 text-sm mt-1 block" })
                            </div>
                        </div>

                        <!-- Birth Date and Address -->
                        <div class="form-grid">
                            <div>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.DataNascita, new
                                    {
                                        htmlAttributes = new
                                        {
                                            @class = "form-input text-gray-900",
                                            @type = "date",
                                            @placeholder = " "
                                        }
                                    })
                                    <label class="floating-label dark:bg-[#f3f2f2e6]" style="border-radius: 0.5rem !important;">
                                        <i class="fa-solid fa-calendar mr-2"></i>Data di Nascita
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.DataNascita, "", new { @class = "text-red-500 text-sm mt-1 block" })
                            </div>

                            <div>
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.Indirizzo, new
                                    {
                                        @class = "form-input text-gray-900",
                                        @placeholder = " ",
                                        @autocomplete = "street-address"
                                    })
                                    <label class="floating-label dark:bg-[#f3f2f2e6]" style="border-radius: 0.5rem !important;">
                                        <i class="fa-solid fa-map-marker-alt mr-2"></i>Indirizzo
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.Indirizzo, "", new { @class = "text-red-500 text-sm mt-1 block" })
                            </div>
                        </div>

                        <!-- City and CF -->
                        <div class="form-grid">
                            <div>
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.Citta, new
                                    {
                                        @class = "form-input text-gray-900",
                                        @placeholder = " ",
                                        @autocomplete = "address-level2"
                                    })
                                    <label class="floating-label dark:bg-[#f3f2f2e6]" style="border-radius: 0.5rem !important;">
                                        <i class="fa-solid fa-city mr-2"></i>Città
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.Citta, "", new { @class = "text-red-500 text-sm mt-1 block" })
                            </div>

                            <div>
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.CF, new
                                    {
                                        @class = "form-input text-gray-900",
                                        @placeholder = " ",
                                        @maxlength = "16",
                                        @style = "text-transform: uppercase"
                                    })
                                    <label class="floating-label dark:bg-[#f3f2f2e6]" style="border-radius: 0.5rem !important;">
                                        <i class="fa-solid fa-id-card mr-2"></i>Codice Fiscale <span class="text-xs bg-transparent">(opzionale)</span>
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.CF, "", new { @class = "text-red-500 text-sm mt-1 block" })
                            </div>
                        </div>

                        <!-- P.IVA and Phone -->
                        <div class="form-grid">
                            <div>
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.Piva, new
                                    {
                                        @class = "form-input text-gray-900",
                                        @placeholder = " ",
                                        @maxlength = "11"
                                    })
                                    <label class="floating-label dark:bg-[#f3f2f2e6]" style="border-radius: 0.5rem !important;">
                                        <i class="fa-solid fa-building mr-2"></i>P.IVA <span class="text-xs bg-transparent">(opzionale)</span>
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.Piva, "", new { @class = "text-red-500 text-sm mt-1 block" })
                            </div>

                            <div>
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.Phone, new
                                    {
                                        @class = "form-input text-gray-900",
                                        @placeholder = " ",
                                        @autocomplete = "tel"
                                    })
                                    <label class="floating-label dark:bg-[#f3f2f2e6]" style="border-radius: 0.5rem !important;">
                                        <i class="fa-solid fa-phone mr-2"></i>Telefono
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-red-500 text-sm mt-1 block" })
                            </div>
                        </div>

                        <!-- Email and Username -->
                        <div class="form-grid">
                            <div>
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.Email, new
                                    {
                                        @class = "form-input text-gray-900",
                                        @placeholder = " ",
                                        @autocomplete = "email",
                                        @type = "email"
                                    })
                                    <label class="floating-label dark:bg-[#f3f2f2e6]" style="border-radius: 0.5rem !important;">
                                        <i class="fa-solid fa-envelope mr-2"></i>Email
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-red-500 text-sm mt-1 block" })
                            </div>

                            <div>
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.Username, new
                                    {
                                        @class = "form-input text-gray-900",
                                        @placeholder = " ",
                                        @autocomplete = "username"
                                    })
                                    <label class="floating-label dark:bg-[#f3f2f2e6]" style="border-radius: 0.5rem !important;">
                                        <i class="fa-solid fa-at mr-2"></i>Username
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-red-500 text-sm mt-1 block" })
                            </div>
                        </div>


                        <!-- Password -->
                        <div class="form-grid">
                            <div>
                                <div class="input-group">
                                    <div class="relative w-full">
                                        @Html.PasswordFor(model => model.Password, new
                                        {
                                            @class = "form-input rounded-none rounded-tl-lg rounded-bl-lg text-gray-900",
                                            @placeholder = " ",
                                            @id = "passwordField",
                                            @autocomplete = "new-password"
                                        })
                                        <label class="floating-label dark:bg-[#f3f2f2e6]" style="border-radius: 0.5rem !important;">
                                            <i class="fa-solid fa-lock mr-2"></i>Password
                                        </label>
                                        <span class="password-toggle bg-transparent" onclick="togglePassword()">
                                            <i class="fa-solid fa-eye" id="passwordIcon"></i>
                                        </span>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-red-500 text-sm mt-1 block" })
                            </div>

                            <!-- Password Requirements -->
                            <div class="mt-2 text-xs text-gray-600">
                                <p>La password deve contenere:</p>
                                <ul class="list-disc list-inside mt-1 space-y-1">
                                    <li>Almeno 8 caratteri</li>
                                    <li>Una lettera minuscola e una maiuscola</li>
                                    <li>Un numero</li>
                                    <li>Un carattere speciale (.!?@@&$%)</li>
                                </ul>
                            </div>
                        </div>

                        <!-- Google reCAPTCHA -->
                        <div class="captcha-container flex flex-col lg:flex-row lg:items-center lg:justify-around w-full">
                            <div class="captcha-content justify-center">
                                <div id="recaptcha-container" class="g-recaptcha"
                                     data-sitekey="@System.Configuration.ConfigurationManager.AppSettings["RecaptchaSiteKey"]"
                                     data-callback="onRecaptchaSuccess"
                                     data-expired-callback="onRecaptchaExpired"
                                     data-error-callback="onRecaptchaError">
                                </div>
                            </div>
                            <div id="recaptcha-error" class="text-red-500 text-sm mt-2 hidden">
                                Completa la verifica reCAPTCHA per continuare.
                            </div>
                        </div>

                        <!-- Submit Button -->
                        <button type="submit" class="btn btn-primary-custom w-full btn-lg rounded-xl" id="submitBtn">
                            <i class="fa-solid fa-user-plus mr-2"></i>
                            Crea Account
                        </button>
                    }

                    <!-- Divider -->
                    <div class="divider my-6">
                        <span class="px-4 text-gray-500 font-medium">oppure</span>
                    </div>

                    <!-- Google Registration -->
                    <a href="@ViewBag.Response" class="social-login w-full p-4 rounded-xl flex items-center justify-center space-x-3 mb-6">
                        <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/c/c1/Google_%22G%22_logo.svg/36px-Google_%22G%22_logo.svg.png"
                             alt="Google" class="w-6 h-6">
                        <span class="font-medium text-gray-900">Registrati con Google</span>
                    </a>

                    <!-- Footer Links -->
                    <div class="text-center">
                        <span class="text-sm text-gray-600">Hai già un account? </span>
                        <a href="@Url.Action("Login", "Auth")"
                           class="text-sm text-yellow-600 hover:text-yellow-700 font-semibold transition-colors">
                            Accedi ora
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

@section Scripts {
    <script src="https://www.google.com/recaptcha/api.js"></script>
    <script>
        // Password Toggle
        function togglePassword() {
            const passwordField = document.getElementById('passwordField');
            const passwordIcon = document.getElementById('passwordIcon');

            if (passwordField.type === 'password') {
                passwordField.type = 'text';
                passwordIcon.className = 'fa-solid fa-eye-slash';
            } else {
                passwordField.type = 'password';
                passwordIcon.className = 'fa-solid fa-eye';
            }
        }

        // Field Validation
        function validateField(field) {
            const value = field.value.trim();
            const fieldName = field.name;
            let isValid = true;
            let errorMessage = '';

            // Remove previous error state
            field.classList.remove('error');

            // Basic validation rules
            if (field.hasAttribute('required') && !value && fieldName !== 'Piva') {
                isValid = false;
                errorMessage = 'Questo campo è obbligatorio';
            } else if (fieldName === 'Email' && value) {
                const emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
                if (!emailRegex.test(value)) {
                    isValid = false;
                    errorMessage = 'Inserisci un indirizzo email valido';
                }
            } else if (fieldName === 'CF' && value) {
                if (value.length !== 16) {
                    isValid = false;
                    errorMessage = 'Il codice fiscale deve essere di 16 caratteri';
                }
            } else if (fieldName === 'Piva' && value) {
                if (value.length !== 11) {
                    isValid = false;
                    errorMessage = 'La partita IVA deve essere di 11 cifre';
                }
            } else if (fieldName === 'Phone' && value) {
                if (value.length < 10) {
                    isValid = false;
                    errorMessage = 'Inserisci un numero di telefono valido';
                }
            }

            // Update field styling
            if (!isValid) {
                field.classList.add('error');
                showFieldError(field, errorMessage);
            } else {
                hideFieldError(field);
            }

            return isValid;
        }

        function showFieldError(field, message) {
            hideFieldError(field); // Remove existing error

            const errorElement = document.createElement('div');
            errorElement.className = 'text-red-500 text-sm mt-1 field-error';
            errorElement.textContent = message;

            field.parentNode.appendChild(errorElement);
        }

        function hideFieldError(field) {
            const existingError = field.parentNode.querySelector('.field-error');
            if (existingError) {
                existingError.remove();
            }
        }

        function showAlert(message, type = 'info') {
            // Simple alert implementation
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert-custom p-4 mb-4 ${type === 'error' ? 'bg-red-50 border-red-200' : 'bg-blue-50 border-blue-200'}`;
            alertDiv.innerHTML = `
                            <div class="flex items-center">
                                <i class="fa-solid fa-exclamation-triangle ${type === 'error' ? 'text-red-600' : 'text-blue-600'} mr-2"></i>
                                <span class="${type === 'error' ? 'text-red-800' : 'text-blue-800'}">${message}</span>
                            </div>
                        `;

            const form = document.getElementById('registrationForm');
            form.insertBefore(alertDiv, form.firstChild);

            setTimeout(() => {
                alertDiv.remove();
            }, 5000);
        }
    </script>

    <script>
        // Variabile globale per il reCAPTCHA
        var isRecaptchaValid = false;
        var recaptchaResponse = null;

        // Callback quando reCAPTCHA è completato con successo
        function onRecaptchaSuccess(response) {
            isRecaptchaValid = true;
            recaptchaResponse = response;
            document.getElementById('recaptcha-error').classList.add('hidden');
            updateProgress();
            console.log('reCAPTCHA completato con successo');
        }

        // Callback quando reCAPTCHA scade
        function onRecaptchaExpired() {
            isRecaptchaValid = false;
            recaptchaResponse = null;
            document.getElementById('recaptcha-error').classList.remove('hidden');
            document.getElementById('recaptcha-error').textContent = 'La verifica reCAPTCHA è scaduta. Ripeti la verifica.';
            updateProgress();
            console.log('reCAPTCHA scaduto');
        }

        // Callback per errori reCAPTCHA
        function onRecaptchaError() {
            isRecaptchaValid = false;
            recaptchaResponse = null;
            document.getElementById('recaptcha-error').classList.remove('hidden');
            document.getElementById('recaptcha-error').textContent = 'Errore nella verifica reCAPTCHA. Riprova.';
            updateProgress();
            console.log('Errore reCAPTCHA');
        }

        // Aggiorna la funzione updateProgress esistente
        function updateProgress() {
            const form = document.getElementById('registrationForm');
            const inputs = form.querySelectorAll('input[type="text"], input[type="email"], input[type="password"], input[type="date"]');
            const requiredInputs = Array.from(inputs).filter(input =>
                input.name !== 'Piva' // P.IVA is optional
            );

            let filledInputs = 0;
            requiredInputs.forEach(input => {
                if (input.value.trim() !== '') {
                    filledInputs++;
                }
            });

            // Add reCAPTCHA to progress
            if (isRecaptchaValid) {
                filledInputs++;
            }

            const totalFields = requiredInputs.length + 1; // +1 for reCAPTCHA
            const progress = (filledInputs / totalFields) * 100;
            document.getElementById('progressFill').style.width = progress + '%';
        }

        // Aggiorna la validazione del form
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('registrationForm');

            // Sostituisci il gestore dell'evento submit esistente
            form.addEventListener('submit', function (e) {
                // Rimuovi il messaggio di errore precedente
                document.getElementById('recaptcha-error').classList.add('hidden');

                if (!isRecaptchaValid || !recaptchaResponse) {
                    e.preventDefault();
                    document.getElementById('recaptcha-error').classList.remove('hidden');
                    document.getElementById('recaptcha-error').textContent = 'Completa la verifica reCAPTCHA per continuare.';

                    // Scroll verso il reCAPTCHA per maggiore UX
                    document.getElementById('recaptcha-container').scrollIntoView({
                        behavior: 'smooth',
                        block: 'center'
                    });

                    return false;
                }

                // Aggiungi il token reCAPTCHA come campo nascosto
                const hiddenInput = document.createElement('input');
                hiddenInput.type = 'hidden';
                hiddenInput.name = 'RecaptchaResponse';
                hiddenInput.value = recaptchaResponse;
                form.appendChild(hiddenInput);

                // Show loading state
                const submitBtn = document.getElementById('submitBtn');
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<i class="fa-solid fa-spinner fa-spin mr-2"></i>Creando account...';
            });
        });
    </script>

    <style>
        @@keyframes ripple {
            to {
                transform: scale(4);
                opacity: 0;
            }
        }
    </style>
}